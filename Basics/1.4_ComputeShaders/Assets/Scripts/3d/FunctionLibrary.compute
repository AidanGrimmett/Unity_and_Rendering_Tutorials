// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel FunctionKernel

//Compute buffers are known as structured buffers in HLSL, RW signifies read-write
RWStructuredBuffer<float3> _Positions;

uint _Resolution;

float _Step;

//this takes a thread identifier, and returns the UV coordinates as a float 2.
//applies the logic from original graph, adding 0.5, multiply by step size, subtract 1
float2 GetUV (uint3 id)
{
    return (id.xy + 0.5) * _Step - 1.0;
}

void SetPosition (uint3 id, float3 position)
{
    if (id.x < _Resolution && id.y < _Resolution)
    {
        _Positions[id.x + id.y * _Resolution] = position;
    }
}

// regarding numthreads: https://discussions.unity.com/t/need-help-understanding-compute-shaders/902852
[numthreads(8, 8, 1)]
void FunctionKernel(uint3 id: SV_DISPATCHTHREADID)
{
 //CONTINUE FROM 1.8 WAVE FUNCTION 
}

